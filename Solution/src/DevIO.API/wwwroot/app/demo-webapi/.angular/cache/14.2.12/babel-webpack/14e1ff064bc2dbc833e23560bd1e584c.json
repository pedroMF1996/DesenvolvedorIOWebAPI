{"ast":null,"code":"import _classCallCheck from \"C:/Users/pmfrp/Downloads/DB2C2636-0FAD-4369-A195-0E759C2E5FD3-03 - AppAngularDemo/app/demo-webapi/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/pmfrp/Downloads/DB2C2636-0FAD-4369-A195-0E759C2E5FD3-03 - AppAngularDemo/app/demo-webapi/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nexport var BaseService = /*#__PURE__*/function () {\n  function BaseService() {\n    _classCallCheck(this, BaseService);\n\n    this.UrlServiceV1 = \"https://localhost:7003/api/v1/\";\n  } //protected UrlServiceV1: string = \"https://devioapi.azurewebsites.net/api/v1/\";\n\n\n  _createClass(BaseService, [{\n    key: \"ObterHeaderFormData\",\n    value: function ObterHeaderFormData() {\n      return {\n        headers: new HttpHeaders({\n          'Content-Disposition': 'form-data; name=\"produto\"',\n          'Authorization': \"Bearer \".concat(this.obterTokenUsuario())\n        })\n      };\n    }\n  }, {\n    key: \"ObterHeaderJson\",\n    value: function ObterHeaderJson() {\n      return {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n  }, {\n    key: \"ObterAuthHeaderJson\",\n    value: function ObterAuthHeaderJson() {\n      return {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Authorization': \"Bearer \".concat(this.obterTokenUsuario())\n        })\n      };\n    }\n  }, {\n    key: \"extractData\",\n    value: function extractData(response) {\n      return response.data || {};\n    }\n  }, {\n    key: \"obterUsuario\",\n    value: function obterUsuario() {\n      return JSON.parse(localStorage.getItem('app.user'));\n    }\n  }, {\n    key: \"obterTokenUsuario\",\n    value: function obterTokenUsuario() {\n      return localStorage.getItem('app.token');\n    }\n  }, {\n    key: \"serviceError\",\n    value: function serviceError(error) {\n      var errMsg;\n\n      if (error instanceof Response) {\n        errMsg = \"\".concat(error.status, \" - \").concat(error.statusText || '');\n      } else {\n        errMsg = error.message ? error.message : error.toString();\n      }\n\n      console.error(errMsg);\n      return throwError(errMsg);\n    }\n  }]);\n\n  return BaseService;\n}();","map":null,"metadata":{},"sourceType":"module"}